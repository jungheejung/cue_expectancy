# social cude contrast
total$social_cue[total$param_cue_type == 'low']  <- -0.5 # social influence task
total$social_cue[total$param_cue_type == 'high'] <- 0.5 # no influence task
total_expect_removeNA = subset(total, total$p3_expect_responseonset != "NA" & total$expect_r >= 150)
model.expect = lmer(expect_theta_pi ~ social_cue + (social_cue | subject), data=  total_expect_removeNA)
summary(model.expect)
total_expect_removeNA = subset(total, total$p3_expect_responseonset != "NA" & total$expect_r >= 150)
model.expect = lmer(expect_theta ~ social_cue + (social_cue | subject), data=  total_expect_removeNA)
summary(model.expect)
total_actual_removeNA = subset(total, total$p6_actual_responseonset != "NA" & total$actual_r >= 150)
model.actual = lmer(actual_theta ~ social_cue*level_con_linear + social_cue*level_con_quad + (social_cue*level_con_linear + social_cue*level_con_quad| subject), data=  total_actual_removeNA)
summary(model.actual)
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == 0.5] <- "high cue" # no influence task
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
hist(total_actual_removeNA$actual_theta)
hist(total_actual_removeNA$actual_theta*pi)
hist(total_actual_removeNA$actual_theta*pi/180)
hist(total_actual_removeNA$actual_theta*180/pi)
hist(total_actual_removeNA$actual_theta*180/pi)
total_actual_removeNA$degree = total_actual_removeNA*180/pi
total_actual_removeNA$degree = total_actual_removeNA$actual_theta*180/pi
ggviolin(total_actual_removeNA, x = "levels_name",
y = "actual_theta_pi",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$degree = total_actual_removeNA$actual_theta*180/pi
hist(total_actual_removeNA$degree)
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$social_name = factor(total_actual_removeNA$social_cue, levels=c("low cue, high cue"))
#total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$social_name = factor(total_actual_removeNA$social_cue, levels=c("low cue, high cue"))
#total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == 0.5] <- "high cue"
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == 0.5] <- "high cue"
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
#total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
total$levels[total$param_administer_type == 'low'] <- -0.5 # social influence task
total$levels[total$param_administer_type == 'med'] <- 0 # no influence task
total$levels[total$param_administer_type == 'high'] <- 0.5 # no influence task
total$levels = factor(total$levels)
#contrast code 1 linear
total$level_con_linear[total$levels == -0.5] <- -0.5
total$level_con_linear[total$levels == 0 ]   <- 0
total$level_con_linear[total$levels == 0.5]  <- 0.5
# contrast code 2 quadratic
total$level_con_quad[total$levels == -0.5] <- -0.33
total$level_con_quad[total$levels == 0]    <- 0.66
total$level_con_quad[total$levels == 0.5]  <- -0.33
# social cude contrast
total$social_cue[total$param_cue_type == 'low']  <- -0.5 # social influence task
total$social_cue[total$param_cue_type == 'high'] <- 0.5 # no influence task
total_expect_removeNA = subset(total, total$p3_expect_responseonset != "NA" & total$expect_r >= 150)
model.expect = lmer(expect_theta ~ social_cue + (social_cue | subject), data=  total_expect_removeNA)
summary(model.expect)
total_actual_removeNA = subset(total, total$p6_actual_responseonset != "NA" & total$actual_r >= 150)
model.actual = lmer(actual_theta ~ social_cue*level_con_linear + social_cue*level_con_quad + (social_cue*level_con_linear + social_cue*level_con_quad| subject), data=  total_actual_removeNA)
summary(model.actual)
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == 0.5] <- "high cue"
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
#total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
#total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
ggviolin(total_actual_removeNA, x = "param_administer_type",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == 0.5] <- "high cue"
total_actual_removeNA$social_name[total_actual_removeNA$social_cue == -0.5] <- "low cue" # no influence task
#total_actual_removeNA$levels_name = factor(total_actual_removeNA$levels, levels=c("low", "med", "high"))
total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0.5] <- "high" # no influence task
total_actual_removeNA$levels_name[total_actual_removeNA$levels == 0] <- "med" # no influence task
total_actual_removeNA$levels_name[total_actual_removeNA$levels == -0.5] <- "low" # no influence task
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$degree = total_actual_removeNA$actual_theta*180/pi
hist(total_actual_removeNA$degree)
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
ggviolin(total_actual_removeNA, x = reorder(c("low", "med", "high")),# "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = xaxis,#reorder(c("low", "med", "high")),# "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = xaxis,#reorder(c("low", "med", "high")),# "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = xaxis,#reorder(c("low", "med", "high")),# "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high")
fill = "levels_name",
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
panel.labs = list(social_name=c("low cue", "high cue"))
facet.by = "social_name",
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "theta for actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
#order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
#order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
#order = c("low", "med", "high"),
#fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
#order = c("low", "med", "high"),
#fill = "levels_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
#order = c("low", "med", "high"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
order = c("low cue", "high cue"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white"))
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
order = c("low cue", "high cue"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
my_comparisons <- list( c("low cue", "high cue") )
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low cue", "high cue") )
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
order = c("low cue", "high cue"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low cue", "high cue") )
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
order = c("low cue", "high cue"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif") +
stat_compare_means(label.y = 50)
# http://www.sthda.com/english/articles/24-ggpubr-publication-ready-plots/
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low cue", "high cue") )
ggviolin(total_actual_removeNA, x = "social_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
#facet.by = "social_name",
# color = "levels_name",
order = c("low cue", "high cue"),
fill = "social_name",
palette = c("#00AFBB",  "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
#stat_compare_means(label.y = 50)
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low", "med", "high") )
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low", "med"), c("low", "high") )
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low", "med"), c("low", "high") , c("low cue", "high cue"))
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
total_actual_removeNA$xaxis = factor(total_actual_removeNA$levels, levels = c("low", "med", "high"))
my_comparisons <- list( c("low", "med"), c("low", "high") )
ggviolin(total_actual_removeNA, x = "levels_name",
y = "degree",
combine = TRUE,
#panel.labs = list(social_name=c("low cue", "high cue")),
facet.by = "social_name",
# color = "levels_name",
order = c("low", "med", "high"),
fill = "levels_name",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
ylab = "degrees of actual ratings",
xlab = "social cue",
add = "boxplot", add.params = list(fill = "white")) +
stat_compare_means(comparisons = my_comparisons, label = "p.signif")
plot(model.expect
)
plot(model.expect
)
plot(model.expect)
qqnorm(resid(model.expect))
qqline(resid(model.expect))
qqnorm(resid(model.expect))
qqline(resid(model.expect))
qqline(resid(model.actual))
qqnorm(resid(model.actual))
qqline(resid(model.actual))
