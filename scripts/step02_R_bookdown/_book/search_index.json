[["ch37_singletrial_C.html", "Chapter 24 Cognitive signature ~ single trial Function Step 1: Common parameters 24.1 PVC all task comparison 24.2 Cognitive only Stim x cue interaction 24.3 Cognitive only: Outcome ratings &amp; Kragel 2018 24.4 Cognitive only: Expectation ratings &amp; NPS", " Chapter 24 Cognitive signature ~ single trial author: &quot;Heejung Jung&quot; date: &quot;2023-03-04&quot; Function Step 1: Common parameters # step 1: load data for (signature_key in c(&quot;Kragel18CogControl&quot;)) { dv_keyword = signature_key signature_name = signature_key # step 1: common parameters _______ main_dir &lt;- dirname(dirname(getwd())) analysis_folder = paste0(&quot;model37_iv-task-stim_dv-&quot;, signature_key) sig_name &lt;- Sys.glob(file.path( main_dir, &quot;analysis/fmri/nilearn/signature_extract&quot;, paste0( &quot;signature-&quot;, signature_key,&quot;_sub-all_runtype-pvc_event-stimulus.tsv&quot; ) )) # nolint print(sig_name) analysis_dir &lt;- file.path(main_dir, &quot;analysis&quot;, &quot;mixedeffect&quot;, analysis_folder, as.character(Sys.Date()) ) # nolint dir.create(analysis_dir, showWarnings = FALSE, recursive = TRUE) savedir &lt;- analysis_dir # step 2: load data df = read.csv(sig_name) sig_df = df %&gt;% separate( singletrial_fname, sep = &quot;_&quot;, c( &quot;sub&quot;, &quot;ses&quot;, &quot;run&quot;, &quot;runtype&quot;, &quot;event&quot;, &quot;trial&quot;, &quot;cuetype&quot;, &quot;stimintensity&quot; ) ) sig_df = sig_df %&gt;% separate( stimintensity, into = c(NA, &quot;stimintensity&quot;), extra = &quot;drop&quot;, fill = &quot;left&quot; ) pvc &lt;- simple_contrasts_singletrial(sig_df) pvc$task[pvc$runtype == &quot;runtype-pain&quot;] &lt;- &quot;pain&quot; pvc$task[pvc$runtype == &quot;runtype-vicarious&quot;] &lt;- &quot;vicarious&quot; pvc$task[pvc$runtype == &quot;runtype-cognitive&quot;] &lt;- &quot;cognitive&quot; pvc$task &lt;- factor(pvc$task) # step 3: parameters taskname = &quot;all&quot; plot_keyword = &quot;stimulusintensity&quot; ggtitle_phrase = &quot;(3 tasks x 3 stimulus intensity)&quot; pvc$task = factor(pvc$task) plot_keys &lt;- list( sub_mean = &quot;mean_per_sub&quot;, group_mean = &quot;mean_per_sub_norm_mean&quot;, legend_keyword = &quot;stimulus intensity&quot;, se = &quot;se&quot;, subject = &quot;sub&quot;, ggtitle = paste0( str_to_title(signature_key),&quot; dot product: &quot;,str_to_title(taskname),&#39; &#39;, ggtitle_phrase,&quot; (N = &quot;, length(unique(pvc$sub)), &quot;)&quot; ), title = paste0( str_to_title(signature_key), &quot; - &quot;, str_to_title(plot_keyword) ), xlab = &quot;&quot;, ylab = paste(signature_key, &quot; (dot product)&quot;), ylim = c(-250, 500) ) # step 4: within between summary groupwise &lt;- data.frame() subjectwise &lt;- data.frame() summary &lt;- summary_for_plots_PVC( df = pvc, groupwise_measurevar = plot_keys$sub_mean, subject_keyword = plot_keys$subject, model_iv1 = &quot;task&quot;, model_iv2 = &quot;stim_ordered&quot;, dv = signature_key #&quot;Cog&quot; ) subjectwise &lt;&lt;- as.data.frame(summary[[1]]) groupwise &lt;&lt;- as.data.frame(summary[[2]]) if (any(startsWith(dv_keyword, c(&quot;expect&quot;, &quot;Expect&quot;)))) { plot_keys$color &lt;- c(&quot;#1B9E77&quot;, &quot;#D95F02&quot;, &quot;#D95F02&quot;) } else { plot_keys$color &lt;- c(&quot;#4575B4&quot;, &quot;#FFA500&quot;, &quot;#D73027&quot;) } # step 5: plot iv2 = &quot;stim_ordered&quot; iv1 = &quot;task&quot; taskname = &quot;all&quot; if (any(startsWith(dv_keyword, c(&quot;expect&quot;, &quot;Expect&quot;)))) { color &lt;- c(&quot;#1B9E77&quot;, &quot;#D95F02&quot;, &quot;#D95F02&quot;) } else { color &lt;- c(&quot;#4575B4&quot;, &quot;#FFA500&quot;, &quot;#D73027&quot;) } subject_mean &lt;- &quot;mean_per_sub&quot; sub_mean = subject_mean group_mean &lt;- &quot;mean_per_sub_norm_mean&quot; se &lt;- &quot;se&quot; ylim &lt;- c(-25, 26) subject &lt;- &quot;sub&quot; ggtitle_phrase &lt;- &quot;(3 tasks x 3 stimulus intensity)&quot; ggtitle &lt;- paste0( str_to_title(signature_name), &quot; dot product: &quot;, str_to_title(taskname), &#39; &#39;, ggtitle_phrase, &quot; (N = &quot;, length(unique(pvc$sub)), &quot;)&quot; ) title &lt;- paste0(str_to_title(dv_keyword), &quot; - &quot;, str_to_title(plot_keys$legend_keyword)) xlab &lt;- &quot;&quot; plot_keyword = &quot;stimintensity&quot; ylab &lt;- paste(signature_name, &quot; (dot product)&quot;) plot2_savefname &lt;- file.path( analysis_dir, paste( &quot;signature_task-&quot;,taskname, &quot;_event-&quot;,plot_keyword,&quot;_dv-&quot;,signature_key,&quot;_&quot;, as.character(Sys.Date()),&quot;.png&quot;, sep = &quot;&quot; ) ) p &lt;- plot_halfrainclouds_twofactor( subjectwise, groupwise, iv1, iv2, subject_mean, group_mean, se, subject, ggtitle, title, xlab, ylab, taskname, ylim, w = 10, h = 6, dv_keyword, color, plot2_savefname ) p } ## [1] &quot;/Users/h/Dropbox (Dartmouth College)/projects_dropbox/social_influence_analysis/analysis/fmri/nilearn/signature_extract/signature-Kragel18CogControl_sub-all_runtype-pvc_event-stimulus.tsv&quot; Load behavioral data main_dir = dirname(dirname(getwd())) print(main_dir) ## [1] &quot;/Users/h/Dropbox (Dartmouth College)/projects_dropbox/social_influence_analysis&quot; datadir = file.path(main_dir, &#39;data&#39;, &#39;beh&#39;, &#39;beh02_preproc&#39;) taskname = &#39;*&#39; subject_varkey &lt;- &quot;src_subject_id&quot; iv &lt;- &quot;param_stimulus_type&quot;; iv_keyword &lt;- &quot;stim&quot;; dv &lt;- &quot;event04_actual_angle&quot;; dv_keyword &lt;- &quot;outcome&quot; exclude &lt;- &quot;sub-0001|sub-0002|sub-0003|sub-0004|sub-0005|sub-0007|sub-0008|sub-0011|sub-0013|sub-0014|sub-0016|sub-0017|sub-0019|sub-0020|sub-0021|sub-0023|sub-0024|sub-0025|sub-0026|sub-0035|sub-0040|sub-0041|sub-0059|sub-0064|sub-0066|sub-0069|sub-0070|sub-0074|sub-0075|sub-0076|sub-0077|sub-0079|sub-0083|sub-0084|sub-0088|sub-0089|sub-0103|sub-0111|sub-0112|sub-0131&quot; p.df &lt;- load_task_social_df(datadir, taskname = &quot;pain&quot;, subject_varkey, iv, dv, exclude) v.df &lt;- load_task_social_df(datadir, taskname = &quot;vicarious&quot;, subject_varkey, iv, dv, exclude) c.df &lt;- load_task_social_df(datadir, taskname = &quot;cognitive&quot;, subject_varkey, iv, dv, exclude) p.df2= p.df %&gt;% arrange(src_subject_id ) %&gt;% group_by(src_subject_id) %&gt;% mutate(trial_index = row_number()) data_p &lt;- p.df2 %&gt;% group_by(src_subject_id, session_id, param_run_num) %&gt;% mutate(trial_index = row_number(param_run_num)) v.df2= v.df %&gt;% arrange(src_subject_id ) %&gt;% group_by(src_subject_id) %&gt;% mutate(trial_index = row_number()) data_v &lt;- v.df2 %&gt;% group_by(src_subject_id, session_id, param_run_num) %&gt;% mutate(trial_index = row_number(param_run_num)) c.df2= c.df %&gt;% arrange(src_subject_id ) %&gt;% group_by(src_subject_id) %&gt;% mutate(trial_index = row_number()-1) data_c &lt;- c.df2 %&gt;% group_by(src_subject_id, session_id, param_run_num) %&gt;% mutate(trial_index = row_number(param_run_num) ) p.sub &lt;- data_p[,c(&quot;src_subject_id&quot;, &quot;session_id&quot;, &quot;param_run_num&quot;, &quot;param_task_name&quot;, &quot;event02_expect_angle&quot;, &quot;param_cue_type&quot;, &quot;param_stimulus_type&quot;, &quot;event04_actual_angle&quot;, &quot;trial_index&quot;)] v.sub &lt;- data_v[,c(&quot;src_subject_id&quot;, &quot;session_id&quot;, &quot;param_run_num&quot;, &quot;param_task_name&quot;, &quot;event02_expect_angle&quot;, &quot;param_cue_type&quot;, &quot;param_stimulus_type&quot;, &quot;event04_actual_angle&quot;, &quot;trial_index&quot;)] c.sub &lt;- data_c[,c(&quot;src_subject_id&quot;, &quot;session_id&quot;, &quot;param_run_num&quot;, &quot;param_task_name&quot;, &quot;event02_expect_angle&quot;, &quot;param_cue_type&quot;, &quot;param_stimulus_type&quot;, &quot;event04_actual_angle&quot;, &quot;trial_index&quot;)] # sub, ses, run, runtype, event, trial, cuetype, stimintensity # src_subject_id, session_id, param_run_num, param_task_name, event02_expect_angle, param_cue_type, param_stimulus_type, event04_actual_angle pvc.sub = rbind(p.sub, v.sub, c.sub) pvc.sub$trial_ind &lt;- pvc.sub$trial_index -1 pvc.sub$sub &lt;- sprintf(&quot;sub-%04d&quot;, pvc.sub$src_subject_id) pvc.sub$ses &lt;- sprintf(&quot;ses-%02d&quot;, pvc.sub$session_id) pvc.sub$run &lt;- sprintf(&quot;run-%02d&quot;, pvc.sub$param_run_num) pvc.sub$runtype &lt;- sprintf(&quot;runtype-%s&quot;, pvc.sub$param_task_name) pvc.sub$trial &lt;- sprintf(&quot;trial-%03d&quot;, pvc.sub$trial_ind) pvc.sub[c(&#39;cue&#39;, &#39;DEPc&#39;)] &lt;- str_split_fixed(pvc.sub$param_cue_type , &#39;_&#39;, 2) pvc.sub$cuetype &lt;- sprintf(&quot;cuetype-%s&quot;, pvc.sub$cue) pvc.sub[c(&#39;stimintensity&#39;, &#39;DEP&#39;)] &lt;- str_split_fixed(pvc.sub$param_stimulus_type , &#39;_&#39;, 2) # merge pvc.beh &lt;- pvc.sub[,c(&quot;sub&quot;, &quot;ses&quot;, &quot;run&quot;, &quot;runtype&quot;, &quot;trial&quot;, &quot;cuetype&quot;, &quot;stimintensity&quot;,&quot;event02_expect_angle&quot;, &quot;event04_actual_angle&quot;)] df_merge &lt;- merge(pvc, pvc.beh, by.x = c(&quot;sub&quot;, &quot;ses&quot;, &quot;run&quot;, &quot;runtype&quot;, &quot;trial&quot;, &quot;cuetype&quot;, &quot;stimintensity&quot;), by.y = c(&quot;sub&quot;, &quot;ses&quot;, &quot;run&quot;, &quot;runtype&quot;, &quot;trial&quot;, &quot;cuetype&quot;, &quot;stimintensity&quot;) ) 24.1 PVC all task comparison # contrast code 1 linear pvc$task_con_linear[pvc$task == &quot;pain&quot;] &lt;- 0.5 pvc$task_con_linear[pvc$task == &quot;vicarious&quot;] &lt;- 0 pvc$task_con_linear[pvc$task == &quot;cognitive&quot;] &lt;- -0.5 # contrast code 2 quadratic pvc$task_con_quad[pvc$task == &quot;pain&quot;] &lt;- 0.66 pvc$task_con_quad[pvc$task == &quot;vicarious&quot;] &lt;- -.34 pvc$task_con_quad[pvc$task == &quot;cognitive&quot;] &lt;- -.34 model.alltask &lt;- lmer(Kragel18CogControl ~ task_con_linear*stim_factor + task_con_quad*stim_factor + (task|sub), data = pvc) summary(model.alltask) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ ## lmerModLmerTest] ## Formula: Kragel18CogControl ~ task_con_linear * stim_factor + task_con_quad * ## stim_factor + (task | sub) ## Data: pvc ## ## REML criterion at convergence: -39168.5 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -6.9896 -0.5849 -0.0159 0.5691 7.6764 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## sub (Intercept) 0.001723 0.04151 ## taskpain 0.003450 0.05873 -0.69 ## taskvicarious 0.001327 0.03643 -0.66 0.35 ## Residual 0.007458 0.08636 ## Number of obs: 19428, groups: sub, 111 ## ## Fixed effects: ## Estimate Std. Error df t value ## (Intercept) -3.116e-02 2.669e-03 1.336e+02 -11.672 ## task_con_linear -9.749e-03 8.717e-03 1.844e+02 -1.118 ## stim_factorlow 4.143e-04 1.521e-03 1.909e+04 0.272 ## stim_factormed 3.349e-04 1.521e-03 1.909e+04 0.220 ## task_con_quad -2.808e-02 8.590e-03 1.602e+02 -3.269 ## task_con_linear:stim_factorlow -1.585e-02 7.309e-03 1.909e+04 -2.168 ## task_con_linear:stim_factormed -7.511e-03 7.309e-03 1.909e+04 -1.028 ## stim_factorlow:task_con_quad -5.029e-03 6.387e-03 1.909e+04 -0.787 ## stim_factormed:task_con_quad 7.969e-04 6.387e-03 1.909e+04 0.125 ## Pr(&gt;|t|) ## (Intercept) &lt; 2e-16 *** ## task_con_linear 0.26484 ## stim_factorlow 0.78535 ## stim_factormed 0.82579 ## task_con_quad 0.00132 ** ## task_con_linear:stim_factorlow 0.03015 * ## task_con_linear:stim_factormed 0.30413 ## stim_factorlow:task_con_quad 0.43106 ## stim_factormed:task_con_quad 0.90071 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) tsk_cn_l stm_fctrl stm_fctrm tsk_cn_q ## task_cn_lnr -0.254 ## stim_fctrlw -0.285 0.010 ## stim_fctrmd -0.285 0.010 0.500 ## task_con_qd 0.164 -0.740 -0.020 -0.020 ## tsk_cn_lnr:stm_fctrl 0.007 -0.419 -0.025 -0.012 0.319 ## tsk_cn_lnr:stm_fctrm 0.007 -0.419 -0.012 -0.025 0.319 ## stm_fctrl:__ -0.015 0.360 0.054 0.027 -0.372 ## stm_fctrm:__ -0.015 0.360 0.027 0.054 -0.372 ## tsk_cn_lnr:stm_fctrl tsk_cn_lnr:stm_fctrm stm_fctrl:__ ## task_cn_lnr ## stim_fctrlw ## stim_fctrmd ## task_con_qd ## tsk_cn_lnr:stm_fctrl ## tsk_cn_lnr:stm_fctrm 0.500 ## stm_fctrl:__ -0.858 -0.429 ## stm_fctrm:__ -0.429 -0.858 0.500 print(&quot;eta squared&quot;) ## [1] &quot;eta squared&quot; eta_squared(model.alltask, partial = TRUE) ## # Effect Size for ANOVA (Type III) ## ## Parameter | Eta2 (partial) | 95% CI ## ----------------------------------------------------------- ## task_con_linear | 0.05 | [0.00, 1.00] ## stim_factor | 4.38e-06 | [0.00, 1.00] ## task_con_quad | 0.12 | [0.04, 1.00] ## task_con_linear:stim_factor | 2.46e-04 | [0.00, 1.00] ## stim_factor:task_con_quad | 5.13e-05 | [0.00, 1.00] ## ## - One-sided CIs: upper bound fixed at [1.00]. parameters::model_parameters(model.alltask) ## # Fixed Effects ## ## Parameter | Coefficient | SE | 95% CI | t(19412) | p ## ------------------------------------------------------------------------------------------------- ## (Intercept) | -0.03 | 2.67e-03 | [-0.04, -0.03] | -11.67 | &lt; .001 ## task con linear | -9.75e-03 | 8.72e-03 | [-0.03, 0.01] | -1.12 | 0.263 ## stim factor [low] | 4.14e-04 | 1.52e-03 | [ 0.00, 0.00] | 0.27 | 0.785 ## stim factor [med] | 3.35e-04 | 1.52e-03 | [ 0.00, 0.00] | 0.22 | 0.826 ## task con quad | -0.03 | 8.59e-03 | [-0.04, -0.01] | -3.27 | 0.001 ## task con linear * stim factor [low] | -0.02 | 7.31e-03 | [-0.03, 0.00] | -2.17 | 0.030 ## task con linear * stim factor [med] | -7.51e-03 | 7.31e-03 | [-0.02, 0.01] | -1.03 | 0.304 ## stim factor [low] * task con quad | -5.03e-03 | 6.39e-03 | [-0.02, 0.01] | -0.79 | 0.431 ## stim factor [med] * task con quad | 7.97e-04 | 6.39e-03 | [-0.01, 0.01] | 0.12 | 0.901 ## ## # Random Effects ## ## Parameter | Coefficient ## ------------------------------------------------ ## SD (Intercept: sub) | 0.04 ## SD (taskpain: sub) | 0.06 ## SD (taskvicarious: sub) | 0.04 ## Cor (Intercept~taskpain: sub) | -0.69 ## Cor (Intercept~taskvicarious: sub) | -0.66 ## Cor (taskpain~taskvicarious: sub) | 0.35 ## SD (Residual) | 0.09 ## ## Uncertainty intervals (equal-tailed) and p-values (two-tailed) computed ## using a Wald t-distribution approximation. lme.dscore(model.alltask, pvc, type = &quot;lme4&quot;) ## t df d ## task_con_linear -1.1184171 184.4166 -0.164715230 ## stim_factorlow 0.2723549 19085.1473 0.003942915 ## stim_factormed 0.2201111 19085.1473 0.003186576 ## task_con_quad -3.2690069 160.1887 -0.516570851 ## task_con_linear:stim_factorlow -2.1682371 19085.1474 -0.031389833 ## task_con_linear:stim_factormed -1.0276361 19085.1474 -0.014877213 ## stim_factorlow:task_con_quad -0.7873927 19085.1474 -0.011399180 ## stim_factormed:task_con_quad 0.1247639 19085.1474 0.001806223 plot_halfrainclouds_twofactor(subjectwise, groupwise, iv1 = &quot;task&quot;, iv2 = &quot;stim_ordered&quot;, sub_mean = &quot;mean_per_sub&quot;, group_mean = &quot;mean_per_sub_norm_mean&quot;, se = &quot;se&quot;, subject = &quot;sub&quot;, ggtitle = &quot;All tasks&quot;, title = &quot;task Stim intensity&quot;, xlab = &quot;Task&quot;, ylab = paste(signature_key, &#39; (dot product)&#39;), task_name = &quot;all&quot;, ylim = c(-50, 50), w=10, h=6, dv_keyword = &quot;stimulusintensity&quot;, color = c(&quot;red&quot;, &quot;yellow&quot;, &quot;blue&quot;), save_fname = &quot;/Users/h/Desktop/plot_35.png&quot;) 24.2 Cognitive only Stim x cue interaction 24.2.1 2x3 stimulus intensity * cue 24.2.2 Linear model ## Warning: Model failed to converge with 1 negative eigenvalue: -5.9e+01 ## [1] &quot;model: Kragel18cogcontrol ratings - cognitive&quot; ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ ## lmerModLmerTest] ## Formula: as.formula(model_string) ## Data: data ## ## REML criterion at convergence: -6435.9 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -5.0012 -0.6064 -0.0172 0.6160 4.6329 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## sub (Intercept) 1.622e-03 0.040277 ## social_cue 8.684e-05 0.009319 0.77 ## stim_con_linear 9.623e-05 0.009810 0.75 0.70 ## stim_con_quad 2.684e-05 0.005181 0.80 0.88 0.95 ## social_cue:stim_con_linear 6.402e-05 0.008001 -0.20 0.27 -0.48 -0.20 ## social_cue:stim_con_quad 6.321e-04 0.025142 0.09 0.68 0.07 0.34 ## Residual 5.156e-03 0.071805 ## ## ## ## ## ## ## 0.82 ## ## Number of obs: 2749, groups: sub, 71 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -0.006593 0.005110 68.670037 -1.290 0.20129 ## social_cue -0.004557 0.002993 108.978750 -1.523 0.13072 ## stim_con_linear -0.011286 0.003580 69.213999 -3.153 0.00239 ** ## stim_con_quad -0.003569 0.003022 303.368866 -1.181 0.23861 ## social_cue:stim_con_linear 0.002279 0.006796 355.176083 0.335 0.73750 ## social_cue:stim_con_quad -0.006588 0.006780 53.000195 -0.972 0.33565 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) socl_c stm_cn_l stm_cn_q scl_c:stm_cn_l ## social_cue 0.283 ## stim_cn_lnr 0.243 0.111 ## stim_con_qd 0.167 0.082 0.073 ## scl_c:stm_cn_l -0.017 0.021 -0.033 -0.018 ## scl_c:stm_cn_q 0.047 0.144 0.001 0.039 0.065 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see help(&#39;isSingular&#39;) 24.2.3 Cog stimulus intensity Cohen’s d = 0.72 ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ ## lmerModLmerTest] ## Formula: ## Kragel18CogControl ~ stim_con_linear + stim_con_quad + (stim_con_linear + ## stim_con_quad | sub) ## Data: data_screen ## ## REML criterion at convergence: -6432.1 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.9043 -0.6175 -0.0087 0.6262 4.6081 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## sub (Intercept) 1.622e-03 0.040269 ## stim_con_linear 6.846e-05 0.008274 0.87 ## stim_con_quad 2.328e-05 0.004825 0.93 0.99 ## Residual 5.225e-03 0.072285 ## Number of obs: 2743, groups: sub, 71 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -0.006353 0.005112 68.556801 -1.243 0.21818 ## stim_con_linear -0.011041 0.003535 68.333650 -3.123 0.00262 ** ## stim_con_quad -0.003368 0.003028 400.796234 -1.112 0.26680 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) stm_cn_l ## stim_cn_lnr 0.239 ## stim_con_qd 0.179 0.057 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see help(&#39;isSingular&#39;) ## [1] &quot;eta squared&quot; ## # Effect Size for ANOVA (Type III) ## ## Parameter | Eta2 (partial) | 95% CI ## ----------------------------------------------- ## stim_con_linear | 0.12 | [0.03, 1.00] ## stim_con_quad | 3.08e-03 | [0.00, 1.00] ## ## - One-sided CIs: upper bound fixed at [1.00]. ## # Fixed Effects ## ## Parameter | Coefficient | SE | 95% CI | t(2733) | p ## --------------------------------------------------------------------------- ## (Intercept) | -6.35e-03 | 5.11e-03 | [-0.02, 0.00] | -1.24 | 0.214 ## stim con linear | -0.01 | 3.54e-03 | [-0.02, 0.00] | -3.12 | 0.002 ## stim con quad | -3.37e-03 | 3.03e-03 | [-0.01, 0.00] | -1.11 | 0.266 ## ## # Random Effects ## ## Parameter | Coefficient ## ------------------------------------------------------ ## SD (Intercept: sub) | 0.04 ## SD (stim_con_linear: sub) | 8.27e-03 ## SD (stim_con_quad: sub) | 4.83e-03 ## Cor (Intercept~stim_con_linear: sub) | 0.87 ## Cor (Intercept~stim_con_quad: sub) | 0.93 ## Cor (stim_con_linear~stim_con_quad: sub) | 0.99 ## SD (Residual) | 0.07 ## t df d ## stim_con_linear -3.123369 68.33365 -0.7556766 ## stim_con_quad -1.112014 400.79623 -0.1110909 24.2.4 Cognitive stimulus &amp; cue effect size: stim_d = 0.73, cue_d = 0.069 ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ ## lmerModLmerTest] ## Formula: ## Kragel18CogControl ~ cue_con * stim_con_linear + cue_con * stim_con_quad + ## (cue_con | sub) ## Data: data_screen ## ## REML criterion at convergence: -6408.3 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -4.9424 -0.6039 -0.0146 0.6224 4.6135 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## sub (Intercept) 1.612e-03 0.04015 ## cue_con 5.184e-05 0.00720 1.00 ## Residual 5.230e-03 0.07232 ## Number of obs: 2743, groups: sub, 71 ## ## Fixed effects: ## Estimate Std. Error df t value Pr(&gt;|t|) ## (Intercept) -6.653e-03 5.098e-03 6.878e+01 -1.305 0.19628 ## cue_con -4.334e-03 2.905e-03 2.986e+02 -1.492 0.13677 ## stim_con_linear -1.045e-02 3.382e-03 2.672e+03 -3.090 0.00202 ** ## stim_con_quad -2.970e-03 2.969e-03 2.672e+03 -1.001 0.31713 ## cue_con:stim_con_linear 2.211e-03 6.770e-03 2.675e+03 0.327 0.74404 ## cue_con:stim_con_quad -5.909e-03 5.938e-03 2.673e+03 -0.995 0.31981 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) cue_cn stm_cn_l stm_cn_q c_cn:stm_cn_l ## cue_con 0.292 ## stim_cn_lnr 0.001 0.020 ## stim_con_qd 0.004 0.006 0.000 ## c_cn:stm_cn_l 0.011 0.003 -0.008 -0.013 ## c_cn:stm_cn_q 0.006 0.006 -0.013 0.000 0.001 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see help(&#39;isSingular&#39;) ## [1] &quot;eta squared&quot; ## # Effect Size for ANOVA (Type III) ## ## Parameter | Eta2 (partial) | 95% CI ## ------------------------------------------------------- ## cue_con | 7.40e-03 | [0.00, 1.00] ## stim_con_linear | 3.56e-03 | [0.00, 1.00] ## stim_con_quad | 3.74e-04 | [0.00, 1.00] ## cue_con:stim_con_linear | 3.99e-05 | [0.00, 1.00] ## cue_con:stim_con_quad | 3.70e-04 | [0.00, 1.00] ## ## - One-sided CIs: upper bound fixed at [1.00]. ## t df d ## cue_con -1.4919521 298.5707 -0.17268766 ## stim_con_linear -3.0896597 2672.1084 -0.11954010 ## stim_con_quad -1.0005545 2672.3127 -0.03871035 ## cue_con:stim_con_linear 0.3265372 2674.7348 0.01262764 ## cue_con:stim_con_quad -0.9950382 2672.7716 -0.03849363 24.2.5 Lineplots plot_lineplot_twofactor(actual_groupwise, taskname = &quot;cognitive&quot;, iv1 = &quot;stim_ordered&quot;, iv2 = &quot;cue_ordered&quot;, mean = &quot;mean_per_sub_norm_mean&quot;, error = &quot;se&quot;, color = c(&quot;#4575B4&quot;, &quot;#D73027&quot;), ggtitle = &quot;placeholder&quot;, xlab = &quot;Stimulus intensity&quot;, ylab = paste(signature_key, &quot; (dot product)&quot;)) 24.2.6 Linear model with Stim x Cue x Expectation rating model.cog3factor &lt;- lmer(Kragel18CogControl ~ cue_con*stim_con_linear*event02_expect_angle + cue_con*stim_con_quad*event02_expect_angle + (cue_con|sub), data = data_screen) ## boundary (singular) fit: see help(&#39;isSingular&#39;) summary(model.cog3factor) ## Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [ ## lmerModLmerTest] ## Formula: ## Kragel18CogControl ~ cue_con * stim_con_linear * event02_expect_angle + ## cue_con * stim_con_quad * event02_expect_angle + (cue_con | sub) ## Data: data_screen ## ## REML criterion at convergence: -6151.8 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -5.0260 -0.6202 -0.0130 0.6336 4.5937 ## ## Random effects: ## Groups Name Variance Std.Dev. Corr ## sub (Intercept) 1.630e-03 0.040374 ## cue_con 5.855e-05 0.007652 1.00 ## Residual 5.162e-03 0.071844 ## Number of obs: 2657, groups: sub, 70 ## ## Fixed effects: ## Estimate Std. Error df ## (Intercept) -6.525e-03 5.882e-03 1.123e+02 ## cue_con -1.195e-02 5.945e-03 1.156e+03 ## stim_con_linear -2.607e-02 6.723e-03 2.586e+03 ## event02_expect_angle -4.741e-05 9.414e-05 2.554e+03 ## stim_con_quad -1.096e-02 5.945e-03 2.584e+03 ## cue_con:stim_con_linear -2.659e-02 1.343e-02 2.587e+03 ## cue_con:event02_expect_angle 2.736e-04 1.698e-04 2.554e+03 ## stim_con_linear:event02_expect_angle 2.877e-04 1.968e-04 2.586e+03 ## cue_con:stim_con_quad -1.916e-02 1.189e-02 2.586e+03 ## event02_expect_angle:stim_con_quad 2.016e-04 1.771e-04 2.587e+03 ## cue_con:stim_con_linear:event02_expect_angle 5.353e-04 3.929e-04 2.587e+03 ## cue_con:event02_expect_angle:stim_con_quad 2.239e-04 3.539e-04 2.586e+03 ## t value Pr(&gt;|t|) ## (Intercept) -1.109 0.269680 ## cue_con -2.010 0.044646 * ## stim_con_linear -3.878 0.000108 *** ## event02_expect_angle -0.504 0.614596 ## stim_con_quad -1.843 0.065407 . ## cue_con:stim_con_linear -1.979 0.047866 * ## cue_con:event02_expect_angle 1.612 0.107190 ## stim_con_linear:event02_expect_angle 1.462 0.143965 ## cue_con:stim_con_quad -1.612 0.107114 ## event02_expect_angle:stim_con_quad 1.138 0.255060 ## cue_con:stim_con_linear:event02_expect_angle 1.362 0.173199 ## cue_con:event02_expect_angle:stim_con_quad 0.633 0.526911 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) cue_cn stm_cn_l ev02__ stm_cn_q c_cn:stm_cn_l c_c:02__ ## cue_con 0.366 ## stim_cn_lnr -0.006 -0.009 ## evnt02_xpc_ -0.433 -0.116 -0.025 ## stim_con_qd 0.015 -0.005 0.011 -0.037 ## c_cn:stm_cn_l -0.003 -0.019 0.382 0.005 0.000 ## c_cn:vn02__ -0.012 -0.735 0.015 -0.414 0.024 -0.014 ## stm_c_:02__ -0.019 0.004 -0.751 0.086 0.012 -0.031 -0.054 ## c_cn:stm_cn_q -0.010 0.018 0.001 0.024 0.357 0.008 -0.031 ## evnt02__:__ -0.024 0.017 0.012 0.054 -0.757 -0.001 -0.043 ## c_c:__:02__ 0.006 -0.017 -0.030 -0.044 -0.001 -0.750 0.074 ## c_c:02__:__ 0.020 -0.026 -0.002 -0.044 0.002 0.014 0.047 ## s__:02 c_cn:stm_cn_q e02__: c_:__: ## cue_con ## stim_cn_lnr ## evnt02_xpc_ ## stim_con_qd ## c_cn:stm_cn_l ## c_cn:vn02__ ## stm_c_:02__ ## c_cn:stm_cn_q -0.002 ## evnt02__:__ -0.048 0.002 ## c_c:__:02__ -0.456 0.014 0.027 ## c_c:02__:__ 0.028 -0.757 -0.484 -0.050 ## optimizer (nloptwrap) convergence code: 0 (OK) ## boundary (singular) fit: see help(&#39;isSingular&#39;) print(&quot;eta squared&quot;) ## [1] &quot;eta squared&quot; eta_squared(model.cog3factor, partial = TRUE) ## # Effect Size for ANOVA (Type III) ## ## Parameter | Eta2 (partial) | 95% CI ## ---------------------------------------------------------------------------- ## cue_con | 3.48e-03 | [0.00, 1.00] ## stim_con_linear | 5.78e-03 | [0.00, 1.00] ## event02_expect_angle | 9.93e-05 | [0.00, 1.00] ## stim_con_quad | 1.31e-03 | [0.00, 1.00] ## cue_con:stim_con_linear | 1.51e-03 | [0.00, 1.00] ## cue_con:event02_expect_angle | 1.02e-03 | [0.00, 1.00] ## stim_con_linear:event02_expect_angle | 8.25e-04 | [0.00, 1.00] ## cue_con:stim_con_quad | 1.00e-03 | [0.00, 1.00] ## event02_expect_angle:stim_con_quad | 5.01e-04 | [0.00, 1.00] ## cue_con:stim_con_linear:event02_expect_angle | 7.17e-04 | [0.00, 1.00] ## cue_con:event02_expect_angle:stim_con_quad | 1.55e-04 | [0.00, 1.00] ## ## - One-sided CIs: upper bound fixed at [1.00]. #parameters::model_parameters(model.cog3factor) lme.dscore(model.cog3factor, data_screen, type = &quot;lme4&quot;) ## boundary (singular) fit: see help(&#39;isSingular&#39;) ## t df d ## cue_con -2.0101599 1156.158 -0.11823661 ## stim_con_linear -3.8777185 2585.733 -0.15251566 ## event02_expect_angle -0.5035855 2554.118 -0.01992887 ## stim_con_quad -1.8432482 2584.370 -0.07251644 ## cue_con:stim_con_linear -1.9794942 2586.972 -0.07783741 ## cue_con:event02_expect_angle 1.6115221 2554.318 0.06377181 ## stim_con_linear:event02_expect_angle 1.4616274 2586.346 0.05748087 ## cue_con:stim_con_quad -1.6118631 2585.596 -0.06339833 ## event02_expect_angle:stim_con_quad 1.1383984 2586.764 0.04476575 ## cue_con:stim_con_linear:event02_expect_angle 1.3623712 2586.508 0.05357579 ## cue_con:event02_expect_angle:stim_con_quad 0.6328144 2586.438 0.02488601 library(plotly) ## ## Attaching package: &#39;plotly&#39; ## The following objects are masked from &#39;package:plyr&#39;: ## ## arrange, mutate, rename, summarise ## The following object is masked from &#39;package:ggplot2&#39;: ## ## last_plot ## The following object is masked from &#39;package:reshape&#39;: ## ## rename ## The following object is masked from &#39;package:stats&#39;: ## ## filter ## The following object is masked from &#39;package:graphics&#39;: ## ## layout # lmer(Kragel18CogControl ~ cue_con*stim_con_linear*event02_expect_angle + cue_con*stim_con_quad*event02_expect_angle + (cue_con|sub), data = data_screen) # mtcars$am[which(mtcars$am == 0)] &lt;- &#39;Automatic&#39; # mtcars$am[which(mtcars$am == 1)] &lt;- &#39;Manual&#39; # mtcars$am &lt;- as.factor(mtcars$am) fig &lt;- plot_ly(data_screen, x = ~event02_expect_angle, y = ~Kragel18CogControl, z = ~event04_actual_angle, color = ~cue_con, colors = c(&#39;#BF382A&#39;, &#39;#0C4B8E&#39;)) fig &lt;- fig %&gt;% add_markers() fig &lt;- fig %&gt;% layout(scene = list(xaxis = list(title = &#39;Expectation&#39;), yaxis = list(title = &#39;Kragel Cognitive&#39;), zaxis = list(title = &#39;Outcome rating&#39;))) fig ## Warning: Ignoring 86 observations 24.2.7 Session 1: 2x3 stimulus intensity * cue 24.2.8 Session 3: 2x3 stimulus intensity * cue 24.2.9 Session 4: 2x3 stimulus intensity * cue 24.3 Cognitive only: Outcome ratings &amp; Kragel 2018 # plot parameters iv2 = &quot;event04_actual_angle&quot;; iv1 = signature_key subject = &quot;sub&quot; ylab = &quot;Outcome rating&quot;; xlab = signature_key ggtitle = &quot;All stimulus intensity&quot; alpha = 0.8; lm_method = &quot;lm&quot; c.sig &lt;- df_merge[df_merge$runtype == &quot;runtype-cognitive&quot;,] df_dropna &lt;- c.sig[!is.na(c.sig[, iv1]) &amp; !is.na(c.sig[, iv2]), ] subjectwise_2dv &lt;- meanSummary_2dv( df_dropna, c(subject), iv1, iv2 ) subjectwise_naomit_2dv &lt;- na.omit(subjectwise_2dv) g &lt;- ggplot( data = subjectwise_naomit_2dv, aes( x = .data[[&quot;DV1_mean_per_sub&quot;]], y = .data[[&quot;DV2_mean_per_sub&quot;]], ) ) + geom_point( size = 2, alpha = alpha) + # geom_abline( # intercept = 0, slope = 1, color = &quot;green&quot;, # linetype = &quot;dashed&quot;, linewidth = 0.5 # ) + theme(aspect.ratio = 1) + #scale_color_manual(values = color_scheme) + scale_shape_manual(values = c(16, 17)) + xlab(xlab) + ylab(ylab) + xlim(-0.25, 0.25) + ylim(0,100) + ggtitle(ggtitle) + theme( axis.line = element_line(colour = &quot;grey50&quot;), panel.background = element_blank(), plot.subtitle = ggtext::element_textbox_simple(size = 11) ) + geom_ribbon(stat = &quot;smooth&quot;, method = lm_method, se = TRUE, alpha = 0.1, aes(color = NULL)) + geom_line(stat = &quot;smooth&quot;, method = lm_method, alpha = 0.8, size = 1.5) ## Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. ## ℹ Please use `linewidth` instead. g ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## `geom_smooth()` using formula = &#39;y ~ x&#39; 24.3.1 outcome ratings * cue c.sig &lt;- df_merge[df_merge$runtype == &quot;runtype-cognitive&quot;,] iv2 = &quot;event04_actual_angle&quot;; iv1 = signature_key df_dropna &lt;- c.sig[!is.na(c.sig[, iv1]) &amp; !is.na(c.sig[, iv2]), ] total &lt;- plot_twovariable( df_dropna, iv1, iv2, group = &quot;cuetype&quot;, subject = &quot;sub&quot;, ymin=0, ymax=100, xmin=-.25, xmax=.25, ylab = &quot;Outcome rating&quot;, xlab = signature_key, ggtitle = &quot;all stimulus intensity&quot;, color_scheme = c(&quot;cuetype-high&quot; =&quot;#011891&quot;,&quot;cuetype-low&quot; = &quot;#BBBBBB&quot;), alpha = .8, fit_lm = TRUE, lm_method =&quot;lm&quot; ) total + labs(title =paste0(&quot;task-&quot;,taskname, &quot;- What is the pattern for NPS pos dotproduct and expect ratings? \\nHow is does this pattern differ depending on high vs low cues?\\n\\n&quot;) ) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## `geom_smooth()` using formula = &#39;y ~ x&#39; ### outcome ratings * stim * cue 24.4 Cognitive only: Expectation ratings &amp; NPS c.sig &lt;- df_merge[df_merge$runtype == &quot;runtype-cognitive&quot;,] iv1 = &quot;event02_expect_angle&quot;; iv2 = signature_key df_dropna &lt;- c.sig[!is.na(c.sig[, iv1]) &amp; !is.na(c.sig[, iv2]), ] total &lt;- plot_twovariable( df_dropna, iv1, iv2, group = &quot;cuetype&quot;, subject = &quot;sub&quot;, xmin =0, xmax = 100, ymin = -.25, ymax = .25, xlab = &quot;expectation rating&quot;, ylab = signature_key, ggtitle = &quot;all stimulus intensity&quot;, color_scheme = c(&quot;cuetype-high&quot; =&quot;#011891&quot;,&quot;cuetype-low&quot; = &quot;#BBBBBB&quot;), alpha = .8, fit_lm = TRUE, lm_method = &quot;lm&quot; ) total + labs(title =paste0(&quot;task-&quot;,taskname, &quot; - What is the pattern for &quot;, signature_key,&quot;dotproduct and expect ratings? \\nHow is does this pattern differ depending on high vs low cues?\\n\\n&quot;)) ## `geom_smooth()` using formula = &#39;y ~ x&#39; ## `geom_smooth()` using formula = &#39;y ~ x&#39; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
