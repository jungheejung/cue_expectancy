{
    "code_generated": "scripts/step10_nilearn/parcel_canlab2023/step01_parcellate_cueepoch_glasser.py",
    "code_parcellate": "canlab2023_coarse = load_atlas('canlab2023_coarse_fmriprep20_2mm')\n    data = fmri_data(canlab2023_coarse)\n    data.fullpath = '/Users/h/Desktop/CANLab2023_MNI152NLin2009cAsym_coarse_2mm.nii.gz'\n    data.write()\n    tbl = table(canlab2023_coarse.labels', canlab2023_coarse.labels_2', canlab2023_coarse.labels_3', canlab2023_coarse.labels_4', canlab2023_coarse.labels_5', canlab2023_coarse.label_descriptions, 'VariableNames', {'coarse labels', 'coarse labels', 'coarser labels', 'coarsest labels', 'source atlas', 'label_description'})\n    writetable(tbl, '/Users/h/Desktop/CANLab2023_MNI152NLin2009cAsym_coarse_2mm.csv')\n    canlab2023 = '/Users/h/Documents/projects_local/cue_expectancy/data/atlas/CANLab2023_MNI152NLin6Asym_coarse_2mm_cifti_vols.nii.gz'\n    parc = Parcellater(parcellation=canlab2023, \n                        space='MNI152', \n                        resampling_target='parcellation')\n    parcelarray = []\n    metadata = []\n    for fname in flattened_list:\n        metadata.append(os.path.basename(fname))\n        singletrial_parc = parc.fit_transform(fname, 'MNI152') # (1, 595)\n        parcelarray.append(singletrial_parc)",
    "atlas": "Canlab 2023 atlas",
    "python_packages": [
        "neuromaps",
        "netneurotools"
    ]
}